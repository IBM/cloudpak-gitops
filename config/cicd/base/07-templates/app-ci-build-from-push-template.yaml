---
apiVersion: triggers.tekton.dev/v1alpha1
kind: TriggerTemplate
metadata:
  creationTimestamp: null
  name: app-ci-template
  namespace: cicd
  annotations:
    argocd.argoproj.io/sync-wave: "30"
spec:
  params:
    - description: The git branch for this PR.
      name: io.openshift.build.commit.ref
    - description: the specific commit SHA.
      name: io.openshift.build.commit.id
    - description: The date at which the commit was made
      name: io.openshift.build.commit.date
    - description: The name of the github user handle that made the commit
      name: io.openshift.build.commit.author
    - description: The commit message
      name: io.openshift.build.commit.message
    - description: The git repository URL.
      name: gitrepositoryurl
    - description: The GitHub repository for this PullRequest.
      name: fullname
    - description: The repository to push built images to.
      name: imageRepo
    - description: Enable image repository TLS certification verification.
      name: tlsVerify
    - description: Path to the Dockerfile to build.
      name: dockerfile
    - description: Path to the directory to use as build context.
      name: context
    - description: Extra parameters passed for the push command when pushing images.
      name: build_extra_args
  resourcetemplates:
    - apiVersion: tekton.dev/v1beta1
      kind: PipelineRun
      metadata:
        annotations:
          tekton.dev/commit-status-source-sha: $(tt.params.io.openshift.build.commit.id)
          tekton.dev/commit-status-source-url: $(tt.params.gitrepositoryurl)
          tekton.dev/git-status: "true"
          tekton.dev/status-context: dev-ci-build-from-pr
          tekton.dev/status-description: CI build on push event
        creationTimestamp: null
        name: app-ci-pipeline-run-$(uid)
      spec:
        params:
          - name: REPO
            value: $(tt.params.fullname)
          - name: GIT_REPO
            value: $(tt.params.gitrepositoryurl)
          - name: TLSVERIFY
            value: $(tt.params.tlsVerify)
          - name: BUILD_EXTRA_ARGS
            value: $(tt.params.build_extra_args)
          - name: IMAGE
            value: $(tt.params.imageRepo):$(tt.params.io.openshift.build.commit.ref)-$(tt.params.io.openshift.build.commit.id)
          - name: COMMIT_SHA
            value: $(tt.params.io.openshift.build.commit.id)
          - name: DOCKERFILE
            value: $(tt.params.dockerfile)
          - name: CONTEXT
            value: $(tt.params.context)
          - name: GIT_REF
            value: $(tt.params.io.openshift.build.commit.ref)
          - name: COMMIT_DATE
            value: $(tt.params.io.openshift.build.commit.date)
          - name: COMMIT_AUTHOR
            value: $(tt.params.io.openshift.build.commit.author)
          - name: COMMIT_MESSAGE
            value: $(tt.params.io.openshift.build.commit.message)
        pipelineRef:
          name: app-ci-pipeline
        serviceAccountName: pipeline
        workspaces:
          - name: shared-data
            volumeClaimTemplate:
              metadata:
                creationTimestamp: null
              spec:
                accessModes:
                  - ReadWriteOnce
                resources:
                  requests:
                    storage: 1Gi
              status: {}
      status: {}
status: {}
