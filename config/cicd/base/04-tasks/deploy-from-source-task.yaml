---
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  creationTimestamp: null
  name: deploy-from-source-task
  namespace: cicd
  annotations:
    argocd.argoproj.io/sync-wave: "30"
spec:
  params:
    - default: "false"
      description: If true run a server-side dryrun.
      name: DRYRUN
      type: string
  resources:
    inputs:
      - name: source
        type: git
  steps:
    - image: quay.io/redhat-developer/k8s-kubectl
      name: run-kubectl
      resources: {}
      script: |
        #!/bin/bash
        is_argocd=false
        argo_path="config/argocd"
        cicd_path="config/cicd"
        cmd=kubectl
        overall_exit=0

        execute() {
          if [[ ! -z "${cmd}" ]]; then $cmd apply --dry-run=$(inputs.params.DRYRUN) -k $1; fi
          e=$?
          if [ $e -gt $overall_exit ]; then
            overall_exit=$e
          fi
        }

        if [[ -d "${argo_path}" ]]; then
          printf "Apply $(basename ${argo_path}) applications\n"
          execute "${argo_path}"
          is_argocd=true
        fi

        printf "Apply $(basename ${cicd_path}) environment\n"
        execute "${cicd_path}/overlays"

        for dir in $(ls -d environments/*/); do
          if ! $is_argocd; then
            printf "Apply $(basename ${dir}) environment\n"
            execute "${dir}env/overlays"
          else
            if [[ -d "${dir}apps" ]]; then
              for app in $(ls -d ${dir}apps/*/); do
                printf "Apply $(basename ${app}) application\n"
                execute $app
              done
            else
              printf "Apply $(basename ${dir}) environment\n"
              execute "${dir}env/overlays"
            fi
          fi
        done

        exit $overall_exit
      workingDir: /workspace/source
