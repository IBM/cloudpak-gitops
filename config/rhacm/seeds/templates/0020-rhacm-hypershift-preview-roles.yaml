{{- $hypershift := .Values.spec.components.hypershift_preview }}
{{- if eq ( default false $hypershift ) true  }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    argocd.argoproj.io/sync-wave: "20"
  creationTimestamp: null
  name: hypershift-role
  namespace: multicluster-engine
rules:
  - apiGroups: [""]
    resources: ["pods"]
    verbs: ["get", "list"]
  - apiGroups: ["apps"]
    resources: ["replicasets"]
    verbs: ["get", "list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    argocd.argoproj.io/sync-wave: "20"
  creationTimestamp: null
  name: hypershift-cluster-manager-role
rules:
  - apiGroups: ["config.openshift.io"]
    resources: ["infrastructures"]
    verbs: ["get", "list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    argocd.argoproj.io/sync-wave: "21"
  creationTimestamp: null
  name: hypershift-role-binding
  namespace: multicluster-engine
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: hypershift-role
subjects:
  - kind: ServiceAccount
    name: cluster-manager
    namespace: multicluster-engine
  - kind: ServiceAccount
    name: hypershift-addon-manager-sa
    namespace: multicluster-engine
  - kind: ServiceAccount
    name: klusterlet-registration-sa
    namespace: open-cluster-management-agent
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    argocd.argoproj.io/sync-wave: "21"
  creationTimestamp: null
  name: hypershift-cluster-manager-role-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hypershift-cluster-manager-role
subjects:
  - kind: ServiceAccount
    name: cluster-manager
    namespace: multicluster-engine
  - kind: ServiceAccount
    name: klusterlet-registration-sa
    namespace: open-cluster-management-agent
  - kind: ServiceAccount
    name: klusterlet-work-sa
    namespace: multicluster-engine
{{- end }}
