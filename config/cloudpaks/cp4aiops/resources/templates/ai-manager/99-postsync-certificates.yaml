---
# https://www.ibm.com/docs/en/cloud-paks/cloud-pak-watson-aiops/3.2.0?topic=manager-starter-installation
# Section "12. Configure signed certificates for NGINX"
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    argocd.argoproj.io/sync-wave: "500"
    argocd.argoproj.io/hook: PostSync
  name: post-cp4aiops-adjust-certs
  namespace: openshift-gitops
spec:
  template:
    spec:
      containers:
        - name: config
          image: quay.io/openshift/origin-cli:latest
          imagePullPolicy: IfNotPresent
          resources:
            requests:
              memory: "384Mi"
              cpu: "200m"
            limits:
              memory: "384Mi"
              cpu: "200m"
          env:
            - name: ARGOCD_NAMESPACE
              value: "openshift-gitops"
            - name: TARGET_NAMESPACE
              value: "{{.Values.metadata.argocd_app_namespace}}"
          command:
            - /bin/sh
            - -c
            - |
              set -eo pipefail
              set -x

              oc project "${TARGET_NAMESPACE}" \
              && instance_name=$(oc get AutomationUIConfig --no-headers -o custom-columns=":metadata.name") \
              || {
                  echo "ERROR: Unable to retrieve AutomationUIConfig instance name."
                  exit 1
              }

              secret_set=$(oc get  AutomationUIConfig "${instance_name}" -o jsonpath={.spec.tls.certificateSecret.secretName})
              if [ "${secret_set}" == "external-tls-secret" ]; then
                  echo "INFO: External secret already set."
                  exit 0
              fi

              if [ -n "${instance_name}" ]; then
                  result=0
                  ingress_secret_name=$(oc get ingresscontroller.operator default \
                      --namespace openshift-ingress-operator \
                      -o jsonpath='{.spec.defaultCertificate.name}') || result=1

                  if [ -n "${ingress_secret_name}" ] && [ "${result}" -eq 0 ]; then
                      oc extract secret/${ingress_secret_name} \
                          -n openshift-ingress \
                          --keys=tls.crt,tls.key \
                          --confirm \
                      && oc delete secret external-tls-secret \
                            --ignore-not-found=true \
                      && oc create secret generic external-tls-secret \
                            --from-file=cert.crt=tls.crt \
                            --from-file=cert.key=tls.key \
                            --dry-run=client -o yaml \
                          | oc apply -f - \
                      && replica_count=$(oc get pods -l component=ibm-nginx -o jsonpath='{ .items[*].metadata.name }' \
                          | wc -w) \
                      && oc rollout restart Deployment/ibm-nginx \
                      && sleep 3 \
                      && oc rollout status Deployment/ibm-nginx \
                      && oc patch AutomationUIConfig "${instance_name}" \
                          --type merge \
                          --patch '{"spec": {"tls": {"caSecret": {"key":"ca.crt", "secretName": "external-tls-secret"}, "certificateSecret": { "secretName": "external-tls-secret" } } } }' \
                      && echo "INFO: AutomationUIConfig patched." \
                      || {
                          echo "ERROR: AutomationUIConfig could not be patched." \"
                      }
                  fi
              fi

              exit ${result}

      restartPolicy: Never
      serviceAccountName: {{.Values.serviceaccount.argocd_application_controller}}
  backoffLimit: 2
