# https://www.ibm.com/docs/en/cloud-paks/cp-waiops/3.1.1?topic=installing-postinstallation-tasks
---
apiVersion: batch/v1
kind: Job
metadata:
  name: post-check-ai-ready
  annotations:
    argocd.argoproj.io/sync-wave: "98"
    argocd.argoproj.io/hook: PostSync
  namespace: openshift-gitops
spec:
  template:
    spec:
      containers:
        - name: config
          image: quay.io/openshift/origin-cli:latest
          imagePullPolicy: IfNotPresent
          resources:
            requests:
              memory: "64Mi"
              cpu: "250m"
            limits:
              memory: "96Mi"
              cpu: "300m"
          env:
            - name: TARGET_NAMESPACE
              value: "{{.Values.metadata.argocd_app_namespace}}"
            - name: WAIT_TIME
              value: "{{.Values.metadata.post_install_wait}}"
          command:
            - /bin/sh
            - -c
            - |
              set -eo pipefail
              set -x

              result=0

              current_seconds=0
              operation_limit_seconds=$(( $(date +%s) + 7200 ))
              pods_found=0
              while [ ${current_seconds} -lt ${operation_limit_seconds} ]; do
                if oc get pods \
                    -l app.kubernetes.io/managed-by=ibm-elastic-operator \
                    -n "${TARGET_NAMESPACE}" &&
                   oc get route -n "${TARGET_NAMESPACE}" cpd; then
                   pods_found=1
                else
                   pods_found=0
                fi
                if [ ${pods_found} -eq 0 ]; then
                  echo "INFO: AI Manager resources not ready, waiting some more."
                  sleep 60
                else
                  echo "INFO: AI Manager resources found."
                  break;
                fi
                current_seconds=$(( $(date +%s) ))
              done

              echo "INFO: Checking AI Manager resources."
              oc wait pods \
                -l app.kubernetes.io/managed-by=ibm-elastic-operator \
                -n "${TARGET_NAMESPACE}" \
                --for=condition=Ready=true \
                --timeout="${WAIT_TIME}" \
              || result=1

              if [ ${result} -eq 0 ]; then
                echo "INFO: All AI Manager resources are ready."
              else
                echo "ERROR: AI Manager resources not ready after specified period."
                oc get pods \
                    -l app.kubernetes.io/managed-by=ibm-elastic-operator \
                    -n "${TARGET_NAMESPACE}" || result=1
                oc describe route -n "${TARGET_NAMESPACE}" cpd || result=1
              fi

              exit "${result}"

      restartPolicy: Never
      serviceAccountName: {{.Values.serviceaccount.argocd_application_controller}}
  backoffLimit: 1
