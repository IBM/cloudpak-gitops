---
apiVersion: batch/v1
kind: Job
metadata:
  name: sync-cluster-scoped-operators
  annotations:
    argocd.argoproj.io/hook: Sync
    argocd.argoproj.io/sync-wave: "150"
  namespace: openshift-gitops
spec:
  template:
    spec:
      containers:
        - name: config
          image: registry.redhat.io/openshift4/ose-cli:latest
          imagePullPolicy: IfNotPresent
          env:
            - name: ARGOCD_NAMESPACE
              value: "openshift-gitops"
            - name: RED_HAT_CERT_MANAGER_ENABLED
              value: "{{.Values.red_hat_cert_manager}}"
            - name: IBM_CERT_MANAGER_NAMESPACE
              value: {{.Values.metadata.ibm_cert_manager_namespace}}
            - name: IBM_CERT_MANAGER_OPERATOR_GROUP
              value: {{.Values.metadata.ibm_cert_manager_operator_group}}
            - name: IBM_CERT_MANAGER_CHANNEL
              value: {{.Values.metadata.ibm_cert_manager_channel}}
          command:
            - /bin/sh
            - -c
            - |
              set -eo pipefail
              set -x

              result=0
              ibm_cert_manager_count=$(oc get Subscription.operators.coreos.com \
                    -l operators.coreos.com/ibm-cert-manager-operator.ibm-cert-manager \
                    -A \
                    -o name | wc -l || result=1)
              if [ "${result}" == 0 ]; then
                  if [ "${ibm_cert_manager_count}" == "0" ]; then
                      echo "INFO: Installing IBM Cert Manager."
                      cat << EOF | oc apply -f -
              ---
              kind: Namespace
              apiVersion: v1
              metadata:
                  name: ${IBM_CERT_MANAGER_NAMESPACE:?}
              ---
              apiVersion: operators.coreos.com/v1
              kind: OperatorGroup
              metadata:
                name: ${IBM_CERT_MANAGER_OPERATOR_GROUP:?}
                namespace: ${IBM_CERT_MANAGER_NAMESPACE:?}
              spec:
                upgradeStrategy: Default
              ---
              apiVersion: operators.coreos.com/v1alpha1
              kind: Subscription
              metadata:
                name: ibm-cert-manager-operator
                namespace: ${IBM_CERT_MANAGER_NAMESPACE:?}
              spec:
                channel: ${IBM_CERT_MANAGER_CHANNEL:?}
                installPlanApproval: Automatic
                name: ibm-cert-manager-operator
                source: ibm-operator-catalog
                sourceNamespace: openshift-marketplace
              EOF

                      while [ $SECONDS -lt 300 ]; do
                          oc wait Subscription.operators.coreos.com ibm-cert-manager-operator \
                              -n ${IBM_CERT_MANAGER_NAMESPACE:?} \
                              --for=condition=CatalogSourcesUnhealthy=False \
                          && oc wait Subscription.operators.coreos.com ibm-cert-manager-operator \
                              -n ${IBM_CERT_MANAGER_NAMESPACE:?} \
                              --for=jsonpath='{.status.state}'="AtLatestKnown" \
                          && echo "INFO: Successfully installed IBM Cert Manager." \
                          && result=0 \
                          && break \
                          || result=1

                          echo "INFO: Waiting for the subscription to be ready."
                          sleep 20
                      done
                  else
                      echo "INFO: IBM Cert Manager already installed."
                      oc get Subscription.operators.coreos.com \
                          -l operators.coreos.com/ibm-cert-manager-operator.ibm-cert-manager \
                          -A
                  fi
              else
                  echo "ERROR: Unable to ascertain status of cert managers in the cluster."
              fi

              if [ "${result}" -eq 1 ] ; then
                echo "ERROR: Unable to locate a running IBM Cert Manager and to install one afterwards."
              fi

              exit "${result}"

      restartPolicy: Never
      serviceAccountName: {{.Values.serviceaccount.argocd_application_controller}}
  backoffLimit: 2
